stages:
  - build
  - release
  - publish
variables:
  GITHUB_REPO_URL: git@github.com:usvc/usvc.git

build:
  except: ["master"]
  stage: build
  image: usvc/mkdocs:material-latest
  artifacts:
    expire_in: 3 days
    paths:
      - ./site
  script:
    - mkdocs build

to gitlab:
  except: ["master"]
  stage: release
  image: usvc/ci-base:latest
  before_script:
    - mkdir -p ~/.ssh
    - 'printf -- "${DEPLOY_KEY}" | base64 -d > ~/.ssh/id_rsa'
    - chmod 600 -R ~/.ssh/id_rsa
    - ssh-keyscan -t rsa gitlab.com >> ~/.ssh/known_hosts
  script:
    - git remote set-url origin "git@gitlab.com:${CI_PROJECT_PATH}.git"
    - git checkout master
    - semver bump --git --apply
    - git push origin master --verbose --tags
  after_script:
    - rm -rf ~/.ssh/*

to github:
  only: ["master"]
  stage: publish
  image: usvc/ci-base:latest
  before_script:
    - mkdir -p ~/.ssh
    - 'printf -- "${DEPLOY_KEY}" | base64 -d > ~/.ssh/id_rsa'
    - chmod 600 -R ~/.ssh/id_rsa
    - ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
  script:
    - git remote set-url origin ${GITHUB_REPO_URL}
    - git checkout master
    - git push -u origin master --tags --force
  after_script:
    - rm -rf ~/.ssh/*

# to github pages:
#   only: ["tags"]
#   stage: publish
#   image: usvc/mkdocs:material-latest
#   before_script:
#     - mkdir -p ~/.ssh
#     - 'printf -- "${DEPLOY_KEY}" | base64 -d > ~/.ssh/id_rsa'
#     - chmod 600 -R ~/.ssh/id_rsa
#     - ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
#   script:
#     - git remote set-url origin "git@gitlab.com:${CI_PROJECT_PATH}.git"
#     - git checkout master
#     - git remote set-url --add --push origin ${GITHUB_REPO_URL}
#     - mkdocs gh-deploy --force
#   after_script:
#     - rm -rf ~/.ssh/*
