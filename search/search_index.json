{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u00b5-services \u00b6 \u00b5-services Modules Golang github.com/usvc/go-config github.com/usvc/go-db github.com/usvc/go-logger github.com/usvc/go-password github.com/usvc/go-semver Tools Echoserver Semver Modules \u00b6 Golang \u00b6 github.com/usvc/go-config \u00b6 Configuration management library. github.com/usvc/go-db \u00b6 Database connection management library. github.com/usvc/go-logger \u00b6 Logging library. github.com/usvc/go-password \u00b6 Passwords management library. github.com/usvc/go-semver \u00b6 Semantic versioning (semver) management library. Tools \u00b6 Echoserver \u00b6 Semver \u00b6","title":"Home"},{"location":"#-services","text":"\u00b5-services Modules Golang github.com/usvc/go-config github.com/usvc/go-db github.com/usvc/go-logger github.com/usvc/go-password github.com/usvc/go-semver Tools Echoserver Semver","title":"\u00b5-services"},{"location":"#modules","text":"","title":"Modules"},{"location":"#golang","text":"","title":"Golang"},{"location":"#githubcomusvcgo-config","text":"Configuration management library.","title":"github.com/usvc/go-config"},{"location":"#githubcomusvcgo-db","text":"Database connection management library.","title":"github.com/usvc/go-db"},{"location":"#githubcomusvcgo-logger","text":"Logging library.","title":"github.com/usvc/go-logger"},{"location":"#githubcomusvcgo-password","text":"Passwords management library.","title":"github.com/usvc/go-password"},{"location":"#githubcomusvcgo-semver","text":"Semantic versioning (semver) management library.","title":"github.com/usvc/go-semver"},{"location":"#tools","text":"","title":"Tools"},{"location":"#echoserver","text":"","title":"Echoserver"},{"location":"#semver","text":"","title":"Semver"},{"location":"landscape/","text":"Landscape \u00b6 This page describes the landscape of the various usvc projects available for use. Images ( /images ) \u00b6 Quick Link Check out the GitLab subgroup at: https://gitlab.com/usvc/images For use as support services \u00b6 Name Description GitLab Link DockerHub Link MkDocs For use in documentation generation Netutils For debugging network issues For use in Continuous Integration (CI) pipelines \u00b6 Quick Link Check out the GitLab subgroup at: https://gitlab.com/usvc/images/ci This namespace houses repositories for CI images meant for use in pipelines and facilitate cross-compatibility amongst available pipeline providers. Name Description GitLab Link DockerHub Link Base For general use Docker For dind use Golang For Golang projects Node For JS/TS projects Development Tooling ( /dev ) \u00b6 Quick Link Check out the GitLab group at: https://gitlab.com/usvc/dev This namespace houses repositories for scripts/snippets/small packages that assist with development tooling. Go Version Generator \u00b6 A simple module meant for Git submodule integration that uses Go's go generate to define a Version and Commit global variable for a Go package. https://gitlab.com/usvc/dev/go-generate-version Modules \u00b6 TL;DR: https://gitlab.com/usvc/modules This namespace is used for technology specific libraries/packages. Go \u00b6 TL;DR: https://gitlab.com/usvc/modules/go This namespace features libraries for use with services written in Go. Playground \u00b6 TL;DR: https://gitlab.com/usvc/playground This namespace houses sample/showcase projects that's non-service/application/code related. Sync GitLab To Github \u00b6 This project demonstrates synchronising a repository from GitLab to GitHub. https://gitlab.com/usvc/playground/sync-gitlab-to-github Utilities \u00b6 TL;DR: https://gitlab.com/usvc/utils This namespace houses repositories for tools that facilitate developer happiness. DB Migrator \u00b6 This utility does database migrations using Rails migrations. https://gitlab.com/usvc/utils/db-migrator Semver \u00b6 This utility enables bumping of semver versions. https://gitlab.com/usvc/utils/semver","title":"Landscape"},{"location":"landscape/#landscape","text":"This page describes the landscape of the various usvc projects available for use.","title":"Landscape"},{"location":"landscape/#images-images","text":"Quick Link Check out the GitLab subgroup at: https://gitlab.com/usvc/images","title":"Images (/images)"},{"location":"landscape/#for-use-as-support-services","text":"Name Description GitLab Link DockerHub Link MkDocs For use in documentation generation Netutils For debugging network issues","title":"For use as support services"},{"location":"landscape/#for-use-in-continuous-integration-ci-pipelines","text":"Quick Link Check out the GitLab subgroup at: https://gitlab.com/usvc/images/ci This namespace houses repositories for CI images meant for use in pipelines and facilitate cross-compatibility amongst available pipeline providers. Name Description GitLab Link DockerHub Link Base For general use Docker For dind use Golang For Golang projects Node For JS/TS projects","title":"For use in Continuous Integration (CI) pipelines"},{"location":"landscape/#development-tooling-dev","text":"Quick Link Check out the GitLab group at: https://gitlab.com/usvc/dev This namespace houses repositories for scripts/snippets/small packages that assist with development tooling.","title":"Development Tooling (/dev)"},{"location":"landscape/#go-version-generator","text":"A simple module meant for Git submodule integration that uses Go's go generate to define a Version and Commit global variable for a Go package. https://gitlab.com/usvc/dev/go-generate-version","title":"Go Version Generator"},{"location":"landscape/#modules","text":"TL;DR: https://gitlab.com/usvc/modules This namespace is used for technology specific libraries/packages.","title":"Modules"},{"location":"landscape/#go","text":"TL;DR: https://gitlab.com/usvc/modules/go This namespace features libraries for use with services written in Go.","title":"Go"},{"location":"landscape/#playground","text":"TL;DR: https://gitlab.com/usvc/playground This namespace houses sample/showcase projects that's non-service/application/code related.","title":"Playground"},{"location":"landscape/#sync-gitlab-to-github","text":"This project demonstrates synchronising a repository from GitLab to GitHub. https://gitlab.com/usvc/playground/sync-gitlab-to-github","title":"Sync GitLab To Github"},{"location":"landscape/#utilities","text":"TL;DR: https://gitlab.com/usvc/utils This namespace houses repositories for tools that facilitate developer happiness.","title":"Utilities"},{"location":"landscape/#db-migrator","text":"This utility does database migrations using Rails migrations. https://gitlab.com/usvc/utils/db-migrator","title":"DB Migrator"},{"location":"landscape/#semver","text":"This utility enables bumping of semver versions. https://gitlab.com/usvc/utils/semver","title":"Semver"},{"location":"continuous-integration/images/","text":"Continuous Integration: Images \u00b6 This page contains a list of all images that were designed for use in continuous integration (CI) pipelines. Unless otherwise stated, the images were created for use primarily with Gitlab CI. Quick Link The code that this page describes can all be found at the GitLab subgroup at https://gitlab.com/usvc/images/ci Base Images \u00b6 Name Description GitLab Link DockerHub Link Base For general use Docker For use with Docker-in-Docker ( dind ) service present to build/push images Golang For use in Golang projects Node For use in JS/TS projects Jobs \u00b6 All jobs will have 3 commands: - before_script - script - after_script Name Description GitLab Link DockerHub Link go-build Builds a Go application TODO TODO go-build-production Builds a Go application without symbols TODO TODO go-build-static Builds a Go application with static linking of dependencies TODO TODO go-build-static-production Builds a Go application with static linking of dependencies and symbols stripped TODO TODO go-deps Retrieves the dependencies for a Go project TODO TODO go-test Tests a Go application with coverage output TODO TODO js-build Retrieves dependencies for a JavaScript application TODO TODO js-deps Builds a JavaScript application TODO TODO js-test Tests a JavaScript application TODO TODO version For versioning of repositories using Git tags","title":"Images"},{"location":"continuous-integration/images/#continuous-integration-images","text":"This page contains a list of all images that were designed for use in continuous integration (CI) pipelines. Unless otherwise stated, the images were created for use primarily with Gitlab CI. Quick Link The code that this page describes can all be found at the GitLab subgroup at https://gitlab.com/usvc/images/ci","title":"Continuous Integration: Images"},{"location":"continuous-integration/images/#base-images","text":"Name Description GitLab Link DockerHub Link Base For general use Docker For use with Docker-in-Docker ( dind ) service present to build/push images Golang For use in Golang projects Node For use in JS/TS projects","title":"Base Images"},{"location":"continuous-integration/images/#jobs","text":"All jobs will have 3 commands: - before_script - script - after_script Name Description GitLab Link DockerHub Link go-build Builds a Go application TODO TODO go-build-production Builds a Go application without symbols TODO TODO go-build-static Builds a Go application with static linking of dependencies TODO TODO go-build-static-production Builds a Go application with static linking of dependencies and symbols stripped TODO TODO go-deps Retrieves the dependencies for a Go project TODO TODO go-test Tests a Go application with coverage output TODO TODO js-build Retrieves dependencies for a JavaScript application TODO TODO js-deps Builds a JavaScript application TODO TODO js-test Tests a JavaScript application TODO TODO version For versioning of repositories using Git tags","title":"Jobs"}]}